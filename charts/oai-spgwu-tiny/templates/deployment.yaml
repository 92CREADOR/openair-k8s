apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "oai-spgwu-tiny.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "oai-spgwu-tiny.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "oai-spgwu-tiny.selectorLabels" . | nindent 8 }}
      annotations:
        k8s.v1.cni.cncf.io/networks: {{ .Chart.Name }}-net1, {{ .Chart.Name }}-net2, {{ .Chart.Name }}-net3
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
      - name: spgwu-tiny
        image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
        env:
          - name: SGW_S1U_INTERFACE
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: sgwS1uIf
          - name: SGW_SX_INTERFACE
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: sgwSxIf
          - name: PGW_SGI_INTERFACE
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: pgwSgiIf
          - name: NETWORK_UE_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: netUeIp
          - name: PGWC_SX_IP_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: pgwcSxIp
          - name: PGWU_SGI_GW
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: pgwuSgiGw
      - name: tcpdump
        image: corfr/tcpdump
        command:
          - /bin/sleep
          - infinity
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: 30
